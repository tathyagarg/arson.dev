services:
  archive:
    build: ./archive
    ports:
      - "8001:8000"
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}

  blog:
    build: ./blog
    ports:
      - "8002:8000"
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - SECRET_KEY=${SECRET_KEY}

  # nepenthes:
  #   build: ./nepenthes
  #   ports:
  #     - "8003:8000"

  paste:
    build: ./paste
    ports:
      - "8004:8000"
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  cdn:
    build: ./cdn
    ports:
      - "8007:8000"
    volumes:
      - ./app/data:/app/data

  dwmun_frontend:
    build: ./dwmun25/frontend
    ports:
      - "8005:3000"

  concursus_frontend:
    build: ./concursus/frontend
    ports:
      - "8006:3000"

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes

  postgres:
    image: postgres:alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data

  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always
    networks:
      - portainer_network

volumes:
  postgres:
  portainer_data:

networks:
  portainer_network:
    driver: bridge
    name: portainer_network
