x-log-volume: &log-volume
  logs:/var/log

services:
  archive:
    build: ./archive
    ports:
      - "8001:8000"
    depends_on:
      - postgres
    environment:
      LOG_FILE: /var/log/archive.log
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    volumes:
    - *log-volume

  blog:
    build: ./blog
    ports:
      - "8002:8000"
    depends_on:
      - postgres
    environment:
      LOG_FILE: /var/log/blog.log
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      SECRET_KEY:
    volumes:
    - *log-volume

  # nepenthes:
  #   build: ./nepenthes
  #   ports:
  #     - "8003:8000"

  paste:
    build: ./paste
    ports:
      - "8004:8000"
    depends_on:
      - redis
    environment:
      LOG_FILE: /var/log/paste.log
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
    - *log-volume

  cdn:
    build: ./cdn
    ports:
      - "8007:8000"
    volumes:
      - cdn:/app/data

  webhooks:
    build: ./webhooks
    ports:
      - "8008:8000"
    depends_on:
      - postgres
    environment:
      LOG_FILE: /var/log/webhooks.log
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    volumes:
    - *log-volume

  dwmun_frontend:
    build: ./dwmun25/frontend
    ports:
      - "8005:3000"

  concursus_frontend:
    build: ./concursus/frontend
    ports:
      - "8006:3000"

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes

  postgres:
    image: postgres:alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB:
      POSTGRES_USER:
      POSTGRES_PASSWORD:
    volumes:
      - postgres:/var/lib/postgresql/data

  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always
    networks:
      - portainer_network

  registry:
    image: registry:2
    container_name: registry
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - registry:/var/lib/registry
    networks:
      - registry_network

volumes:
  cdn:
  logs:
    external: true
  postgres:
  registry:
  portainer_data:

networks:
  portainer_network:
    driver: bridge
    name: portainer_network
  registry_network:
    driver: bridge
    name: registry_network
